{"version":3,"sources":["logo.svg","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","a","App","props","state","users","less","hr","he","cc","cf","ot","handlehr","bind","handlehe","handlecc","handlecf","handleot","fetch","then","res","json","data","setState","result","ongoing","upcoming","str","this","className","src","logo","alt","type","onChange","defaultChecked","map","e","check","Platform","data-toggle","data-target","Name","id","EndTime","href","url","StartTime","Duration","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54cafa3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nvar a=1;\nclass App extends Component {\n  state = {users: [],\n          less: [],\n          hr :true,\n          he :true,\n          cc :true,\n          cf :true,\n          ot :true\n        }\n  componentDidMount() {\n    fetch('https://contesttrackerapi.herokuapp.com/android/')\n      .then(res => res.json())\n      .then(data => this.setState({ users:data.result.ongoing,less:data.result.upcoming }));\n  }\n\n  constructor(props) {\n    super(props);\n    this.handlehr = this.handlehr.bind(this);\n    this.handlehe = this.handlehe.bind(this);\n    this.handlecc = this.handlecc.bind(this);\n    this.handlecf = this.handlecf.bind(this);\n    this.handleot = this.handleot.bind(this);\n  }\n\n  check(str){\n    if(str===\"HACKERRANK\"){\n      if(this.state.hr)\n        return true;\n      else\n        return false;\n    }\n\n    if(str===\"CODECHEF\"){\n      if(this.state.cc)\n        return true;\n      else\n        return false;\n    }\n\n    if(str===\"HACKEREARTH\"){\n      if(this.state.he)\n        return true;\n      else\n        return false;\n    }\n\n    if(str===\"CODEFORCES\"){\n      if(this.state.cf)\n        return true;\n      else\n        return false;\n    }\n\n    if(str===\"OTHER\"){\n      if(this.state.ot)\n        return true;\n      else\n        return false;\n    }\n  }\n\n  handlehr(){\n    this.setState({hr:!this.state.hr});\n  }\n\n  handlehe(){\n    this.setState({he:!this.state.he});\n  }\n\n  handlecf(){\n    this.setState({cf:!this.state.cf});\n  }\n\n  handlecc(){\n    this.setState({cc:!this.state.cc});\n  }\n\n  handleot(){\n    this.setState({ot:!this.state.ot});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1 className=\"App-title\">Welcome to React Calendar</h1>\n          </header>\n          <div className=\"cb\">\n            <div className=\"pretty p-default p-round\">\n              <input type=\"checkbox\" onChange={this.handlehr} defaultChecked={this.state.hr}/>\n              <div className=\"state p-success-o\">\n                  <label><strong>Hackerrank</strong></label>\n              </div>\n            </div>\n\n            <div className=\"pretty p-default p-round\">\n              <input type=\"checkbox\" onChange={this.handlecf} defaultChecked={this.state.cf}/>\n              <div className=\"state p-success-o\">\n                  <label><strong>Codeforces</strong></label>\n              </div>\n            </div>\n\n          <div className=\"pretty p-default p-round\">\n              <input type=\"checkbox\" onChange={this.handlecc} defaultChecked={this.state.cc}/>\n              <div className=\"state p-success-o\">\n                  <label><strong>Codechef</strong></label>\n              </div>\n            </div>\n\n            <div className=\"pretty p-default p-round\">\n              <input type=\"checkbox\" onChange={this.handlehe} defaultChecked={this.state.he}/>\n              <div className=\"state p-success-o\">\n                  <label><strong>Hackerearth</strong></label>\n              </div>\n            </div>\n\n            <div className=\"pretty p-default p-round\">\n              <input type=\"checkbox\" onChange={this.handleot} defaultChecked={this.state.ot}/>\n              <div className=\"state p-success-o\">\n                  <label><strong>Others</strong></label>\n              </div>\n            </div>\n          </div>\n          <div className=\"hell\">\n          {this.state.users.map(e => (\n            this.check(e.Platform) ? (\n               <div>\n                     <button className=\"button button1\" data-toggle=\"collapse\" data-target={\"#\"+a}><h5><b>{e.Name}</b></h5></button>\n                      <div id={a++} className=\"adi collapse\">\n                        <strong>Name</strong> : {e.Name} <br/>\n                        <strong>Ends In</strong> : {e.EndTime} <br/>\n                        <strong>Platform</strong> : {e.Platform} <br/>\n                        <strong>Url</strong> : <a href={e.url}>Paricipate</a>\n                      </div>\n                </div>\n            ) : <div></div>\n          ))}\n          </div>\n\n        </div>\n        <div>\n        <h1>Upcoming Contest</h1>\n        <br/>\n        {this.state.less.map(e => (\n          this.check(e.Platform)?\n                  <div>\n                     <button className=\"button button4\" data-toggle=\"collapse\" data-target={\"#\"+a}><h5><b>{e.Name}</b></h5></button>\n                      <div id={a++} className=\"adi collapse\">\n                        <strong>Name</strong> : {e.Name} <br/>\n                        <strong>Starts In</strong> : {e.StartTime} <br/>\n                        <strong>Ends In</strong> : {e.EndTime} <br/>\n                        <strong>Duration</strong> : {e.Duration} <br/>\n                        <strong>Platform</strong> : {e.Platform} <br/>\n                        <strong>Url</strong> : <a href={e.url}>Paricipate</a>\n                      </div>\n                  </div>:<div></div>\n            ))}\n      </div>\n        <div className=\"pad\">\n          <header className=\"footer\">\n              <p>In <span className=\"glyphicon glyphicon-heart coll\"></span> With ReactJS</p>\n          </header>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}